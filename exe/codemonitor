#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../providers/console'
require_relative '../providers/datadog'

require_relative '../engines/git/extractor'
require_relative '../engines/npm/extractor'
require_relative '../engines/semgrep/extractor'
require_relative '../engines/rubocop/extractor'

PROVIDERS = {
  console: Providers::Console,
  datadog: Providers::Datadog
}.freeze

EXTRACTORS = {
  git: Engines::Git::Extractor,
  npm: Engines::Npm::Extractor,
  semgrep: Engines::Semgrep::Extractor,
  rubocop: Engines::Rubocop::Extractor
}.freeze

config_provider = ENV['CODEMONITOR_PROVIDER'] || 'console'
config_extractors = ENV['CODEMONITOR_EXTRACTORS']

provider = PROVIDERS[config_provider.to_sym].new
extractors = if config_extractors
               EXTRACTORS.slice(*config_extractors.split(',').map(&:to_sym)).values
             else
               EXTRACTORS.values
             end

puts '# process start'

# Run all the extractors and collect the data
extractors
  .map(&:new)
  .map do |extractor|
    extractor.call(provider)
  end

# Send all the data to the provider
provider.send

puts '# process end'
